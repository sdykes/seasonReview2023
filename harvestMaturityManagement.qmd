# harvest and maturity management

Authors: Stuart Dykes, Dharini Marinkovich and Tim Channing Pearce

```{r}
#| label: initialisation
#| message: false
#| warning: false
#| echo: false

library(tidyverse)

knitr::opts_chunk$set(echo = F, message = F, warning = F)

```


## Introduction

Harvest commenced on 10^th^ February 2023 and continued through to the 14^th^ April spanning 63 days.  A comparison of the of the 2022 and the 2023 season is given in @tbl-harvestStsts.  The major difference between the 2022 and 2023 season is the impact of cyclone Gabrielle which occurred over the 13 - 14^th^ February 2023.  Three days of apple picking were achieved before the cyclone struck and 414 bins were harvested.  Harvesting resumed after the cyclone six days later on 18^TH^ February.  The gap can be seen clearly in @fig-dailyBins

```{r}
#| label: tbl-harvestStsts
#| tbl-cap: "Summary statistics for 2022 and 2023 harvest timing"

binsHarvested <- rockitHelperFunctions::binsHarvested(c(2019:2023), 'Trauts2018!')

#=============================calculate the days to peak======================================

MDB <- binsHarvested %>%
  group_by(Season, HarvestDate ) |>
  summarise(dailyBins = sum(NoOfBins, na.rm=T),
            .groups = "drop") |>
  group_by(Season) |>
  summarise(maxDailyBins = max(dailyBins)) |>
  pull(maxDailyBins)

BHD <- binsHarvested |>
  group_by(Season, HarvestDate ) |>
  summarise(dailyBins = sum(NoOfBins, na.rm=T),
            .groups = "drop") |>
  filter(dailyBins %in% MDB) |>
  dplyr::select(-dailyBins)

daysToPeakBins <- binsHarvested |>
  group_by(Season, HarvestDate) |>
  summarise(dailyBins = sum(NoOfBins, na.rm=T),
            .groups = "drop") |>
  group_by(Season) |>
  mutate(daysTo = as.numeric(HarvestDate - min(HarvestDate))) |>
  inner_join(BHD, by = c("Season", "HarvestDate")) |>
  dplyr::select(-c(HarvestDate, dailyBins))
  

#================================calculate peak daily bins=======================================

peakDailyBins <- binsHarvested |>
  group_by(Season, HarvestDate) |>
  summarise(dailyBins = sum(NoOfBins, na.rm=T),
            .groups = "drop") |>
  group_by(Season) |>
  summarise(peakDailyBins = max(dailyBins))

#=====================Number of days with daily bin tallies > 1000 bins=========================

daysWithGreaterThan1000Bins <- binsHarvested |>
  group_by(Season, HarvestDate) |>
  summarise(dailyBins = sum(NoOfBins, na.rm=T),
            .groups = "drop") |>
  group_by(Season) |>
  mutate(bins1000 = if_else(dailyBins >= 1000, 1, 0)) |>
  summarise(NoOfDayGr1000Bins = sum(bins1000))

#============================number of bins in a given season====================================

seasonBins <- binsHarvested |>
  group_by(Season) |>
  summarise(NoOfBins = sum(NoOfBins, na.rm=T))

#==========================aggregate it all together and put in a table=========================

binsHarvested |>
  group_by(Season) |>
  summarise(minHD = min(HarvestDate), 
            maxHD = max(HarvestDate)) |> 
  mutate(seasonLength = maxHD-minHD) |>
  left_join(seasonBins, by="Season") |>
  left_join(peakDailyBins, by="Season") |>
  left_join(daysToPeakBins, by="Season") |>
  left_join(daysWithGreaterThan1000Bins, by="Season") |>
  mutate(across(.col=c(NoOfBins:NoOfDayGr1000Bins), ~scales::comma(., accuracy=1.0))) |>
  kableExtra::kable(col.names = c("season", "start", "finish", "length$^{1}$", "total", "peak daily", "days to peak", "days with > 1,000"),
                    align=c("l",rep("r",7)), 
                    booktabs=TRUE,
                    linesep="",
                    escape = F)  |>
  kableExtra::kable_styling(full_width=F,
                latex_options = c("HOLD_position", "scale_down")) |>
  kableExtra::add_header_above(c("", "harvest date" = 3, "bins"=4)) |>
  kableExtra::footnote(number = c("\\\\footnotesize{This also includes the six day gap in harvest cause by cyclone Gabrielle in 2023}"),
                       threeparttable = T,
                       escape = F) 
  

```



```{r}
#| label: fig-dailyBins
#| fig-cap: "histogram of daily bins through the 2022 and 2023 harvest"
#| fig-align: center
#| out-width: 100%
#| fig-asp: 0.6

binsHarvested |>
  filter(Season >= 2022) |>
  group_by(Season, HarvestDate) |>
  summarise(dailyBins = sum(NoOfBins, na.rm=T),
            .groups = "drop") |>
  mutate(plotDate = as.Date(str_c("2022-", as.character(month(HarvestDate)), "-", as.character(day(HarvestDate))))) |>
  ggplot(aes(x=plotDate, y=dailyBins)) +
  geom_col(colour="#48762e", fill="#48762e", alpha=0.5, linewidth=0.15) +
  facet_wrap(~Season, ncol=1) +
  geom_hline(yintercept = 1000, linetype=3) +
  annotate("text", x=as.Date("2022-03-30"), y=1050, label = "1,000 bins per day", size=2.5, vjust=0) +
  labs(x="harvest date",
       y = "daily bins") +
  ggthemes::theme_economist() + 
  theme(axis.title.x = element_text(margin = margin(t = 10), size = 9),
        axis.title.y = element_text(margin = margin(r = 10), size = 9),
        axis.text.y = element_text(size = 7, hjust=1),
        axis.text.x = element_text(size = 7, angle = 0, hjust = 0.5, vjust = 1),
        plot.background = element_rect(fill = "#F7F1DF", colour = "#F7F1DF"),
        legend.text = element_text(size = 8),
        legend.title = element_text(size = 8),
        strip.text = element_text(margin = margin(b=2, t=2), size = 8),
        strip.background = element_rect(fill="#fbf4af"),
        legend.position = "top")
  
```


```{r}
#| label: fig-cumDailyBins
#| fig-cap: "Comparison of cumulative daily bins since 2019"
#| fig-align: center
#| out-width: 100%
#| fig-asp: 0.6

binsHarvested |>
  group_by(Season, HarvestDate) |>
  summarise(dailyBins = sum(NoOfBins, na.rm=T),
            .groups = "drop") |>
  group_by(Season) |>
  mutate(cumSumDailyBins = cumsum(dailyBins),
         day=mday(HarvestDate),
         month=month(HarvestDate),
         plotDate = as.Date(paste0("2019-",month,"-", day))) |>
  ggplot(aes(plotDate, cumSumDailyBins)) +
  geom_line(aes(colour=factor(Season)), linewidth=0.5) +
  geom_rect(aes(xmin = as.Date("2019-02-13"), xmax = as.Date("2019-02-15"), ymin = -Inf, ymax = Inf),
            fill = "grey", colour = "grey", alpha = 0.05) +
  annotate("text", x=as.Date("2019-02-14"), y=8000, label="cyclone Gabrielle", angle=90, hjust=0, vjust = 0.5, size=2) + 
  labs(x = "date",
       colour = "season") +
  scale_y_continuous("cumulative daily bin tally", labels = scales::label_comma(accuracy=1.)) +
  ggthemes::theme_economist() + 
  scale_colour_manual(values=c("#a9342c", "#48762e", "#526280", "#aec9e3", "#edb7a7")) +
  theme(axis.title.x = element_text(margin = margin(t = 7)),
        axis.title.y = element_text(margin = margin(r = 7)),
        axis.text.y = element_text(size = 8, hjust=1),
        axis.text.x = element_text(size = 8),
        plot.background = element_rect(fill = "#F7F1DF", colour = "#F7F1DF"),
        plot.title = element_text(margin = margin(b = 10)),
        legend.text = element_text(size = 8),
        legend.title = element_text(size = 8))
```
## Number of picks

Historically, Rockit^TM^ apple orchards have been harvested multiple times during a season and multiple picks of an orchard is a relatively common practice, particularly with the 3D spindle growing system due to maturity differences within the tree. Reducing orchard picks A secondary reason was to allow the future estimation of pick numbers and to allow the optimisation of orchard picks to maximise productivity and quality.

Table \@ref(tab:pickNoTable1) shows the number of blocks harvested in one, two or three picks.  The same table also lists the bins harvested for each pick, depending on how many picks were required for the given block. Only 18 blocks were harvested once.  This is likely due to orchard age and the small crop load.  80 and 79 blocks were harvested two and three or more times respectively.  In terms of the number of bins per pick, these are given in absolute terms in table \@ref(tab:pickNoTable1) and proportionally in table \@ref(tab:pickNoTable2).

::: {.callout-tip}
## Insight

This is an example of a callout with a title.
:::

```{r}
#| label: tbl-blockByPick
#| tbl-cap: "Summary of blocks by number of picks, 2023 Harvest"

TotalBinsPerBlock <- binsHarvested |>  
  filter(Season == 2023) |>
  group_by(FarmName, SubdivisionDesc) |>
  summarise(BlockBins = sum(NoOfBins, na.rm=T),
            .groups = "drop")

pickData <- binsHarvested |> 
  filter(Season == 2023) |>
  group_by(FarmName, SubdivisionDesc, PickNoDesc) |>
  summarise(NoOfBins = sum(NoOfBins, na.rm=T),
            .groups = "keep") |>
  left_join(TotalBinsPerBlock, by = c("FarmName", "SubdivisionDesc")) |>
  mutate(NoOfPicks = as.integer(str_sub(PickNoDesc, 1, 1))) |>
  ungroup()

binsPerPick <- pickData |>
  group_by(NoOfPicks, PickNoDesc) |>
  summarise(NoOfBins = sum(NoOfBins, na.rm=T)) |>
  pivot_wider(id_cols = NoOfPicks, names_from = PickNoDesc, values_from = NoOfBins) 

pickData |>
  left_join(secondPick, by = c("FarmName", "BlockCode")) |>
  mutate(NoOfPicks = replace_na(NoOfPicks, 1)) |>
  group_by(NoOfPicks, FarmName, BlockCode) |>
  summarise(NoOfBins = sum(NoOfBins, na.rm=T),
            .groups = "drop") |>
  group_by(NoOfPicks) |>
  summarise(count = n()) |>
  left_join(binsPerPick, by="NoOfPicks") |>
  mutate(across(`1st Pick`:`3rd Pick`, ~replace_na(. ,0))) |>
  mutate(`1st Pick` = scales::comma(`1st Pick`, accuracy = 1),
         `2nd Pick` = scales::comma(`2nd Pick`, accuracy = 1),
         `3rd Pick` = scales::comma(`3rd Pick`, accuracy = 1)) |>
  kable(caption = "Summary of blocks by number of picks 2022 harvest",
        col.names = c("No. of picks", "No. of blocks", "1st Pick", "2nd Pick", "3rd Pick"),
        align=c("l",rep("r",4)), 
        booktabs=TRUE, 
        escape = F)  %>%
  kable_styling(full_width=F,
                latex_options = "HOLD_position") |>
  add_header_above(c(" " = 2, "No. of bins in each pick" = 3))



```

